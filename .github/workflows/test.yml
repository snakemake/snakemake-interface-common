name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches-ignore: []

permissions:
  contents: read
  checks: write
  issues: write
  pull-requests: write

jobs:
  quality-control:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Install Pixi
        uses: prefix-dev/setup-pixi@v0.8.3
        with:
          environments: dev
          pixi-version: v0.42.1
          cache: true

      - name: Ruff Format
        run: |
          pixi run --environment dev format --check | tee ruff-format.log
          echo "::group::Formatted output"
          cat ruff-format.log
          echo "::endgroup::"
      
      - name: Ruff Lint
        run: |
          pixi run --environment dev lint --output-format github | tee ruff-lint.log
          echo "::group::Linted output"
          cat ruff-lint.log
          echo "::endgroup::"

      - name: Post lint results as PR comments
        uses: reviewdog/action-suggester@v1
        with:
          tool_name: ruff-lint
          filter_mode: added
          suggestions_file: ruff-lint.log

      - name: Post format results as PR comments
        uses: reviewdog/action-suggester@v1
        with:
          tool_name: ruff-format
          filter_mode: added
          suggestions_file: ruff-format.log

  testing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Pixi
        uses: prefix-dev/setup-pixi@v0.8.3
        with:
          environments: dev
          pixi-version: v0.42.1
          cache: true

      - name: Install dependencies
        run: |
          pip install connection-pool # because it is incompatible with poetry
          poetry install

      - name: Run pytest
        run: poetry run coverage run -m pytest tests/tests.py

      - name: Run Coverage
        run: poetry run coverage report -m
